{"version":3,"file":"UsersController.js","names":["getAllUsers","req","res","next","Users","find","password","users","status","json","message","totalItems","length","statusCode","getOneUser","userId","params","findById","user","error","Error","createUser","email","body","fullname","username","type","bcrypt","hash","hashPassword","save","result","_id","toString","updateUserProfile","updateUserPassword","oldPassword","newPassword","compare","isEqual","newHashPassword","updateUserType","deleteUser","deleteOne"],"sources":["../../server/controllers/UsersController.js"],"sourcesContent":["import Users from \"../models/users\";\nimport bcrypt from \"bcryptjs\";\n\nconst getAllUsers = async (req, res, next) => {\n  try {\n    const users = await Users.find({}, { password: 0 });\n    res.status(200).json({\n      message: \"Successfully fetched all users\",\n      users: users,\n      totalItems: users.length,\n    });\n  } catch (error) {\n    if (!error.statusCode) {\n      error.statusCode = 500;\n    }\n    next(error);\n  }\n};\n\nconst getOneUser = async (req, res, next) => {\n  try {\n    const userId = req.params.userId;\n\n    const user = await Users.findById(userId, { password: 0 });\n\n    if (!user) {\n      const error = new Error(\"Could not find user\");\n      error.statusCode = 404;\n      throw error;\n    }\n\n    res.status(200).json({\n      message: \"User found\",\n      user: user,\n    });\n  } catch (error) {\n    if (!error.statusCode) {\n      error.statusCode = 500;\n    }\n    next(error);\n  }\n};\n\nconst createUser = async (req, res, next) => {\n  const email = req.body.email;\n  const fullname = req.body.fullname;\n  const username = req.body.username;\n  const password = req.body.password;\n  const type = req.body.type;\n\n  try {\n    const hashPassword = await bcrypt.hash(password, 12);\n    const user = new Users({\n      email: email,\n      fullname: fullname,\n      username: username,\n      password: hashPassword,\n      type: type,\n    });\n\n    const result = await user.save();\n\n    res.status(200).json({\n      message: \"Successfully created user\",\n      userId: result._id.toString(),\n    });\n  } catch (error) {\n    if (!error.statusCode) {\n      error.statusCode = 500;\n    }\n    next(error);\n  }\n};\n\nconst updateUserProfile = async (req, res, next) => {\n  try {\n    const userId = req.params.userId;\n    const user = await Users.findById(userId, { password: 0 });\n\n    if (!user) {\n      const error = new Error(\"Could not find user\");\n      error.statusCode = 404;\n      throw error;\n    }\n\n    user.email = req.body.email;\n    user.fullname = req.body.fullname;\n    user.username = req.body.username;\n\n    const result = await user.save();\n\n    res.status(200).json({\n      message: \"User updated\",\n      user: result,\n    });\n  } catch (error) {\n    if (!error.statusCode) {\n      error.statusCode = 500;\n    }\n    next(error);\n  }\n};\n\nconst updateUserPassword = async (req, res, next) => {\n  try {\n    const userId = req.params.userId;\n    const oldPassword = req.body.oldPassword;\n    const newPassword = req.body.newPassword;\n    const user = await Users.findById(userId);\n\n    if (!user) {\n      const error = new Error(\"Could not find user\");\n      error.statusCode = 404;\n      throw error;\n    }\n\n    const isEqual = await bcrypt.compare(oldPassword, user.password);\n\n    if (!isEqual) {\n      const error = new Error(\"Invalid password\");\n      error.statusCode = 401;\n      throw error;\n    }\n\n    const newHashPassword = await bcrypt.hash(newPassword, 12);\n\n    user.password = newHashPassword;\n    await user.save();\n\n    res.status(200).json({\n      message: \"Successfully updated password\",\n      userId: userId,\n    });\n  } catch (error) {\n    if (!error.statusCode) {\n      error.statusCode = 500;\n    }\n    next(error);\n  }\n};\n\nconst updateUserType = async (req, res, next) => {\n  try {\n    const userId = req.params.userId;\n    const type = req.body.type;\n    const user = await Users.findById(userId, { type: 1 });\n\n    if (!user) {\n      const error = new Error(\"Could not find user\");\n      error.statusCode = 404;\n      throw error;\n    }\n\n    user.type = type;\n    await user.save();\n\n    res.status(200).json({\n      message: \"Successfully change user type\",\n      userId: userId,\n    });\n  } catch (error) {\n    if (!error.statusCode) {\n      error.statusCode = 500;\n    }\n    next(error);\n  }\n};\n\nconst deleteUser = async (req, res, next) => {\n  try {\n    const userId = req.params.userId;\n    const user = await Users.findById(userId, { password: 0 });\n\n    if (!user) {\n      const error = new Error(\"Could not find user\");\n      error.statusCode = 404;\n      throw error;\n    }\n\n    await Users.deleteOne({ _id: userId });\n\n    res.status(200).json({\n      message: \"Successfully delete user\",\n      userId: userId,\n    });\n  } catch (error) {\n    if (!error.statusCode) {\n      error.statusCode = 500;\n    }\n    next(error);\n  }\n};\n\nexport default {\n  getAllUsers,\n  getOneUser,\n  createUser,\n  updateUserProfile,\n  updateUserPassword,\n  updateUserType,\n  deleteUser,\n};\n"],"mappings":"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"}